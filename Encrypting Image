from PIL import Image
import os

def encrypt_image(image_path, key):
    try:
        # Validate if the file exists
        if not os.path.isfile(image_path):
            print(f"Error: The file '{image_path}' does not exist.")
            return

        # Open the image
        with Image.open(image_path) as img:
            pixels = img.load()

            # Get image dimensions
            width, height = img.size

            # Perform XOR operation on each pixel's values
            for x in range(width):
                for y in range(height):
                    pixel_values = pixels[x, y]
                    # If the image has an alpha channel
                    if len(pixel_values) == 4:
                        r, g, b, a = pixel_values
                        pixels[x, y] = (r ^ key, g ^ key, b ^ key, a)
                    # If the image does not have an alpha channel
                    else:
                        r, g, b = pixel_values
                        pixels[x, y] = (r ^ key, g ^ key, b ^ key)

            # Save encrypted image data to a new file
            encrypted_path = image_path.replace('.png', '_encrypted.png')  # Adjust according to your file naming convention
            img.save(encrypted_path)

        print('Encryption Done. Encrypted image saved as:', encrypted_path)

    except FileNotFoundError:
        print(f"Error: The file '{image_path}' was not found.")
    except IOError:
        print(f"Error: Unable to read or write to '{image_path}'.")
    except Exception as e:
        print(f"An error occurred: {str(e)}")

def main():
    try:
        # Take path of image as input
        image_path = input('Enter the path of the image file to encrypt: ').strip('"').strip()

        # Validate if the file exists
        if not os.path.isfile(image_path):
            print(f"Error: The file '{image_path}' does not exist.")
            return

        # Taking encryption key as input
        key = int(input('Enter Key for encryption of Image (must be an integer): '))

        # Print path of image file and encryption key
        print('The path of file : ', image_path)
        print('Key for encryption : ', key)

        # Encrypt the image
        encrypt_image(image_path, key)

    except ValueError:
        print("Error: Please enter a valid integer for the encryption key.")
    except KeyboardInterrupt:
        print("\nProcess interrupted.")
    except Exception as e:
        print(f"An error occurred: {str(e)}")

if __name__ == "__main__":
    main()
